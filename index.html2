<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ToolHub - Multi-Tool Suite</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
        }
        body {
            background: linear-gradient(120deg, #dfe9f3, #ffffff);
            color: #34495e;
            padding: 25px;
            min-height: 100vh;
        }
        .container {
            max-width: 1200px;
            margin: 0 auto;
            text-align: center;
        }
        h1 {
            font-size: 2.5em;
            color: #3498db;
            margin-bottom: 30px;
            text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.1);
        }
        .tool-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(260px, 1fr));
            gap: 20px;
            margin-bottom: 40px;
        }
        .tool-card {
            background: #fff;
            padding: 20px;
            border-radius: 12px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }
        .tool-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
        }
        .tool-card h3 {
            color: #3498db;
            font-size: 1.3em;
            margin-bottom: 15px;
        }
        .tool-card input, .tool-card textarea, .tool-card button {
            width: 100%;
            padding: 10px;
            margin: 8px 0;
            border-radius: 6px;
            font-size: 1em;
        }
        .tool-card input, .tool-card textarea {
            border: 1px solid #bdc3c7;
            outline: none;
        }
        .tool-card textarea {
            resize: vertical;
            min-height: 70px;
        }
        .tool-card button {
            background: #3498db;
            color: #fff;
            border: none;
            cursor: pointer;
            transition: background 0.3s ease;
        }
        .tool-card button:hover {
            background: #2980b9;
        }
        #output {
            background: #fff;
            padding: 20px;
            border-radius: 12px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            margin-top: 30px;
            display: none;
            text-align: left;
        }
        #output.active {
            display: block;
        }
        #output img, #output canvas {
            max-width: 100%;
            border-radius: 6px;
            margin-top: 10px;
        }
        a {
            color: #3498db;
            font-weight: bold;
            text-decoration: none;
        }
        a:hover {
            text-decoration: underline;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>ToolHub - Multi-Tool Suite</h1>
        <div class="tool-grid">
            <!-- Text to PDF Converter -->
            <div class="tool-card">
                <h3>Text to PDF</h3>
                <textarea id="textInput" placeholder="Enter text to convert"></textarea>
                <button onclick="convertTextToPDF()">Convert to PDF</button>
            </div>

            <!-- Image Resizer -->
            <div class="tool-card">
                <h3>Image Resizer</h3>
                <input type="file" id="imageResizeInput" accept="image/*">
                <input type="number" id="resizeWidth" placeholder="Width (px)" min="1">
                <button onclick="resizeImage()">Resize Image</button>
            </div>

            <!-- Color Picker -->
            <div class="tool-card">
                <h3>Color Picker</h3>
                <input type="color" id="colorPicker" value="#3498db">
                <button onclick="displayColor()">Get Color Code</button>
            </div>

            <!-- Random Password Generator -->
            <div class="tool-card">
                <h3>Password Generator</h3>
                <input type="number" id="passwordLength" placeholder="Length (8-32)" min="8" max="32">
                <button onclick="generatePassword()">Generate Password</button>
            </div>
        </div>
        <div id="output"></div>
    </div>

    <script>
        const outputDiv = document.getElementById('output');

        // Text to PDF Converter
        function convertTextToPDF() {
            const text = document.getElementById('textInput').value;
            if (!text) {
                alert('Please enter some text!');
                return;
            }
            const blob = new Blob([text], { type: 'application/pdf' });
            const url = URL.createObjectURL(blob);
            outputDiv.innerHTML = `<p>Text converted to PDF:</p><a href="${url}" download="text.pdf">Download PDF</a>`;
            outputDiv.classList.add('active');
        }

        // Image Resizer
        function resizeImage() {
            const fileInput = document.getElementById('imageResizeInput');
            const width = document.getElementById('resizeWidth').value;
            if (!fileInput.files[0] || !width) {
                alert('Please upload an image and specify a width!');
                return;
            }
            const file = fileInput.files[0];
            const img = new Image();
            const canvas = document.createElement('canvas');
            const ctx = canvas.getContext('2d');

            img.onload = () => {
                const aspectRatio = img.height / img.width;
                canvas.width = width;
                canvas.height = width * aspectRatio;
                ctx.drawImage(img, 0, 0, canvas.width, canvas.height);
                const resizedUrl = canvas.toDataURL('image/jpeg');
                outputDiv.innerHTML = `<p>Resized Image:</p><img src="${resizedUrl}" alt="Resized Image"><br><a href="${resizedUrl}" download="resized.jpg">Download</a>`;
                outputDiv.classList.add('active');
            };
            img.src = URL.createObjectURL(file);
        }

        // Color Picker
        function displayColor() {
            const color = document.getElementById('colorPicker').value;
            outputDiv.innerHTML = `<p>Selected Color: ${color}</p><div style="width: 100px; height: 100px; background-color: ${color}; border-radius: 6px; margin-top: 10px;"></div>`;
            outputDiv.classList.add('active');
        }

        // Random Password Generator
        function generatePassword() {
            const length = parseInt(document.getElementById('passwordLength').value);
            if (!length || length < 8 || length > 32) {
                alert('Please enter a length between 8 and 32!');
                return;
            }
            const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*';
            let password = '';
            for (let i = 0; i < length; i++) {
                password += chars.charAt(Math.floor(Math.random() * chars.length));
            }
            outputDiv.innerHTML = `<p>Generated Password:</p><p style="word-break: break-all;">${password}</p>`;
            outputDiv.classList.add('active');
        }
    </script>
</body>
</html>
